version: '3'

services:

  django_web:
    container_name: django_web
    build: ./django
    command: sh -c "uvicorn --host=0.0.0.0 --port=9111 --workers=6 --no-access-log project.asgi:application" # daphne -b 0.0.0.0 -p 9111 project.asgi:application
    volumes:
      - ./django:/code
    ports:
      - "9111:9111"
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1

  falcon_web:
    container_name: falcon_web
    build: ./falcon
    command: sh -c "uwsgi uwsgi.ini"
    volumes:
      - ./falcon:/code
    ports:
      - "3031:3031"
      - "9191:9191"
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1

  fastapi_web:
    container_name: fastapi_web
    build: ./fastapi
    command: sh -c "uvicorn --host 0.0.0.0 --port 8000 --workers 6 --no-access-log main:app"
    volumes:
      - ./fastapi:/code
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1

  sanic_web:
    container_name: sanic_web
    build: ./sanic
    command: sh -c "python server.py"
    volumes:
      - ./sanic:/code
    ports:
      - "1337:1337"
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1

  nginx:
    container_name: frameworks_nginx
    image: nginx:stable-alpine
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - django_web
      - falcon_web
      - fastapi_web
      - sanic_web

  postgres:
    container_name: frameworks_postgres
    image: postgres:latest
    volumes:
      - frameworks_postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres

  go:
    container_name: go
    image: golang:latest
    command: sh -c "sleep 10000"

volumes:
  frameworks_postgres:
